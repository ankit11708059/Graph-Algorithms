#include<bits/stdc++.h>
using namespace std;


vector<int>* getPathHelper(int **edges,int v,int s,int e,bool* visited)
{
    if(s==e)
    {
        vector<int>* output=new vector<int>();
        output->push_back(s);
        return output;
    }
    visited[s]=true;
    for(int i=0;i<v;i++)
    {
        if(edges[i][s]==1 && visited[i]==false)
        {
            vector<int>* small=getPathHelper(edges,v,i,e,visited);
            if(small!=NULL)
             small->push_back(s);
             return small;
        }
    }
    return NULL;
}
vector<int>* getPath(int **edges,int v,int s,int e)
{
    bool *visitied =new bool[v];
    for(int i=0;i<v;i++)
    {
        visitied[i]=false;
    }
    vector<int>* output=getPathHelper(edges,v,s,e,visitied);
    delete [] visitied;
    return output;
}
int main()
{
    int v,e,a,b;
    cin>>v>>e;
    int** edges=new int*[v];
    for(int i=0;i<v;i++)
    {
        edges[i]=new int[v];
        for(int j=0;j<v;j++)
        {
            edges[i][j]=0;
        }
    }
    int flag=0,src;
    for(int i=0;i<e;i++)
    {
        cin>>a>>b;
        edges[a][b]=1;
        edges[b][a]=1;
        if(flag==0)
        {
            src=a;
            flag=1;
        }
    }
    int c,d;
    cin>>c>>d;
    vector<int>* output=getPath(edges,v,c,d);
    if(output!=NULL)
    {
        for(int i=0;i<output->size();i++)
        {
            cout<<output->at(i)<<" ";
        }
    }
    else
        cout<<"No\n";




}
